### JetBrains template
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio

*.iml

## Directory-based project format:
.idea/
# if you remove the above rule, at least ignore the following:

# User-specific stuff:
# .idea/workspace.xml
# .idea/tasks.xml
# .idea/dictionaries

# Sensitive or high-churn files:
# .idea/dataSources.ids
# .idea/dataSources.xml
# .idea/sqlDataSources.xml
# .idea/dynamic.xml
# .idea/uiDesigner.xml

# Gradle:
# .idea/gradle.xml
# .idea/libraries

# Mongo Explorer plugin:
# .idea/mongoSettings.xml

## File-based project format:
*.ipr
*.iws

## Plugin-specific files:

# IntelliJ
/out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties

### Node template
# Logs
logs
*.log
npm-debug.log*

# Runtime data
pids
*.pid
*.seed

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directory
# https://docs.npmjs.com/misc/faq#should-i-check-my-node-modules-folder-into-git
node_modules

# Created by .ignore support plugin (hsz.mobi)

.idea

#Derived binaries
target
test-output
[Bb]in
[Bb]uild
*.class
*.[wej]ar
*.[ao]
*.log
*.exe
*.out
*.dll
*.so
*.dylib
*.dynlib
*.iml
*.lock

# IDE project files etc
.classpath
.project
.settings
.idea
.gwt
.metadata
*.iml

# Various editors tmp files
# Do not include '.*' here; would disable .gitignore itself
.#*
.~*
*~
\#*
~$*

# User local settings
environment.local.properties

#Temps and old ones and backups
*.versionsBackup
*.tmp
*.bac
*.bak
*.temp
tmp
x.x*
#Just to be on the safe side
.svn


# Packages #
############
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.tar
*.zip


# OS specifics
*.DS_Stor*
._*
.Spotlight-V100
.Trashes
ehthumbs.db
[Tt]humbs.db

.springBeans
/ui-aggregate.iml

/src/main/resources/local.properties
package-lock.json

#vim swap files:
.*\.swp
node_modules/